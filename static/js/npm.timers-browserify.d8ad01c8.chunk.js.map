{"version":3,"sources":["../node_modules/timers-browserify/main.js"],"names":["apply","Function","prototype","Timeout","id","clearFn","this","_id","_clearFn","exports","setTimeout","call","scope","arguments","clearTimeout","setInterval","clearInterval","timeout","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","setImmediate","self","global","clearImmediate"],"mappings":"+EAAA,qFACIA,EAAQC,SAASC,UAAUF,MAgB/B,SAASG,EAAQC,EAAIC,GACnBC,KAAKC,IAAMH,EACXE,KAAKE,SAAWH,EAhBlBI,EAAQC,WAAa,WACnB,OAAO,IAAIP,EAAQH,EAAMW,KAAKD,WAAYE,EAAOC,WAAYC,eAG/DL,EAAQM,YAAc,WACpB,OAAO,IAAIZ,EAAQH,EAAMW,KAAKI,YAAaH,EAAOC,WAAYG,gBAGhEP,EAAQK,aAAeL,EAAQO,cAAgB,SAAUC,GACnDA,GACFA,EAAQC,SASZf,EAAQD,UAAUiB,MAAQhB,EAAQD,UAAUkB,IAAM,aAElDjB,EAAQD,UAAUgB,MAAQ,WACxBZ,KAAKE,SAASG,KAAKC,EAAON,KAAKC,MAIjCE,EAAQY,OAAS,SAAUC,EAAMC,GAC/BT,aAAaQ,EAAKE,gBAClBF,EAAKG,aAAeF,GAGtBd,EAAQiB,SAAW,SAAUJ,GAC3BR,aAAaQ,EAAKE,gBAClBF,EAAKG,cAAgB,GAGvBhB,EAAQkB,aAAelB,EAAQmB,OAAS,SAAUN,GAChDR,aAAaQ,EAAKE,gBAClB,IAAID,EAAQD,EAAKG,aAEbF,GAAS,IACXD,EAAKE,eAAiBd,YAAW,WAC3BY,EAAKO,YAAYP,EAAKO,eACzBN,KAKP,EAAQ,KAKRd,EAAQqB,aAA+B,qBAATC,MAAwBA,KAAKD,cAAkC,qBAAXE,GAA0BA,EAAOF,cAAgBxB,MAAQA,KAAKwB,aAChJrB,EAAQwB,eAAiC,qBAATF,MAAwBA,KAAKE,gBAAoC,qBAAXD,GAA0BA,EAAOC,gBAAkB3B,MAAQA,KAAK2B,iB","file":"static/js/npm.timers-browserify.d8ad01c8.chunk.js","sourcesContent":["var scope = typeof global !== \"undefined\" && global || typeof self !== \"undefined\" && self || window;\nvar apply = Function.prototype.apply; // DOM APIs, for completeness\n\nexports.setTimeout = function () {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\n\nexports.setInterval = function () {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\n\nexports.clearTimeout = exports.clearInterval = function (timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\n\nTimeout.prototype.unref = Timeout.prototype.ref = function () {};\n\nTimeout.prototype.close = function () {\n  this._clearFn.call(scope, this._id);\n}; // Does not start the time, just sets up the members needed.\n\n\nexports.enroll = function (item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function (item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function (item) {\n  clearTimeout(item._idleTimeoutId);\n  var msecs = item._idleTimeout;\n\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout) item._onTimeout();\n    }, msecs);\n  }\n}; // setimmediate attaches itself to the global object\n\n\nrequire(\"setimmediate\"); // On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\n\n\nexports.setImmediate = typeof self !== \"undefined\" && self.setImmediate || typeof global !== \"undefined\" && global.setImmediate || this && this.setImmediate;\nexports.clearImmediate = typeof self !== \"undefined\" && self.clearImmediate || typeof global !== \"undefined\" && global.clearImmediate || this && this.clearImmediate;"],"sourceRoot":""}