{"version":3,"sources":["../node_modules/safe-buffer/index.js"],"names":["buffer","Buffer","copyProps","src","dst","key","SafeBuffer","arg","encodingOrOffset","length","from","alloc","allocUnsafe","allocUnsafeSlow","module","exports","prototype","Object","create","TypeError","size","fill","encoding","buf","undefined","SlowBuffer"],"mappings":"8EACA,IAAIA,EAAS,EAAQ,KAEjBC,EAASD,EAAOC,OAEpB,SAASC,EAAUC,EAAKC,GACtB,IAAK,IAAIC,KAAOF,EACdC,EAAIC,GAAOF,EAAIE,GAYnB,SAASC,EAAWC,EAAKC,EAAkBC,GACzC,OAAOR,EAAOM,EAAKC,EAAkBC,GATnCR,EAAOS,MAAQT,EAAOU,OAASV,EAAOW,aAAeX,EAAOY,gBAC9DC,EAAOC,QAAUf,GAGjBE,EAAUF,EAAQe,GAClBA,EAAQd,OAASK,GAOnBA,EAAWU,UAAYC,OAAOC,OAAOjB,EAAOe,WAE5Cd,EAAUD,EAAQK,GAElBA,EAAWI,KAAO,SAAUH,EAAKC,EAAkBC,GACjD,GAAmB,kBAARF,EACT,MAAM,IAAIY,UAAU,iCAGtB,OAAOlB,EAAOM,EAAKC,EAAkBC,IAGvCH,EAAWK,MAAQ,SAAUS,EAAMC,EAAMC,GACvC,GAAoB,kBAATF,EACT,MAAM,IAAID,UAAU,6BAGtB,IAAII,EAAMtB,EAAOmB,GAYjB,YAVaI,IAATH,EACsB,kBAAbC,EACTC,EAAIF,KAAKA,EAAMC,GAEfC,EAAIF,KAAKA,GAGXE,EAAIF,KAAK,GAGJE,GAGTjB,EAAWM,YAAc,SAAUQ,GACjC,GAAoB,kBAATA,EACT,MAAM,IAAID,UAAU,6BAGtB,OAAOlB,EAAOmB,IAGhBd,EAAWO,gBAAkB,SAAUO,GACrC,GAAoB,kBAATA,EACT,MAAM,IAAID,UAAU,6BAGtB,OAAOnB,EAAOyB,WAAWL","file":"static/js/npm.safe-buffer.3be150bb.chunk.js","sourcesContent":["/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer');\n\nvar Buffer = buffer.Buffer; // alternative to using Object.keys for old browsers\n\nfunction copyProps(src, dst) {\n  for (var key in src) {\n    dst[key] = src[key];\n  }\n}\n\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer;\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports);\n  exports.Buffer = SafeBuffer;\n}\n\nfunction SafeBuffer(arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length);\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype); // Copy static methods from Buffer\n\ncopyProps(Buffer, SafeBuffer);\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number');\n  }\n\n  return Buffer(arg, encodingOrOffset, length);\n};\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number');\n  }\n\n  var buf = Buffer(size);\n\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding);\n    } else {\n      buf.fill(fill);\n    }\n  } else {\n    buf.fill(0);\n  }\n\n  return buf;\n};\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number');\n  }\n\n  return Buffer(size);\n};\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number');\n  }\n\n  return buffer.SlowBuffer(size);\n};"],"sourceRoot":""}