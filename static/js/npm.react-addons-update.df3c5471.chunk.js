(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{76:function(e,t,a){"use strict";var r=a(116),o=a(338),p={}.hasOwnProperty;var s=["$push","$unshift","$splice","$set","$merge","$apply"],c={};function n(e,t,a){o(Array.isArray(e),"update(): expected target of %s to be an array; got %s.",a,e);var r=t[a];o(Array.isArray(r),"update(): expected spec of %s to be an array; got %s. Did you forget to wrap your parameter in an array?",a,r)}s.forEach((function(e){c[e]=!0})),e.exports=function e(t,a){if(o("object"===typeof a,"update(): You provided a key path to update() that did not contain one of %s. Did you forget to include {%s: ...}?",s.join(", "),"$set"),p.call(a,"$set"))return o(1===Object.keys(a).length,"Cannot have more than one key in an object with %s","$set"),a.$set;var i,y=(i=t,Array.isArray(i)?i.concat():i&&"object"===typeof i?r(new i.constructor,i):i);if(p.call(a,"$merge")){var u=a.$merge;o(u&&"object"===typeof u,"update(): %s expects a spec of type 'object'; got %s","$merge",u),o(y&&"object"===typeof y,"update(): %s expects a target of type 'object'; got %s","$merge",y),r(y,a.$merge)}for(var f in p.call(a,"$push")&&(n(t,a,"$push"),a.$push.forEach((function(e){y.push(e)}))),p.call(a,"$unshift")&&(n(t,a,"$unshift"),a.$unshift.forEach((function(e){y.unshift(e)}))),p.call(a,"$splice")&&(o(Array.isArray(t),"Expected %s target to be an array; got %s","$splice",t),o(Array.isArray(a.$splice),"update(): expected spec of %s to be an array of arrays; got %s. Did you forget to wrap your parameters in an array?","$splice",a.$splice),a.$splice.forEach((function(e){o(Array.isArray(e),"update(): expected spec of %s to be an array of arrays; got %s. Did you forget to wrap your parameters in an array?","$splice",a.$splice),y.splice.apply(y,e)}))),p.call(a,"$apply")&&(o("function"===typeof a.$apply,"update(): expected spec of %s to be a function; got %s.","$apply",a.$apply),y=a.$apply(y)),a)c.hasOwnProperty(f)&&c[f]||(y[f]=e(t[f],a[f]));return y}}}]);
//# sourceMappingURL=npm.react-addons-update.df3c5471.chunk.js.map