{"version":3,"sources":["../node_modules/stylis-rule-sheet/index.js"],"names":["module","insertRule","toSheet","block","e","context","content","selectors","parents","line","column","length","ns","depth","at","charCodeAt","split","delimiter","forEach","factory"],"mappings":"8EACiEA,EAAgB,QAC9E,WACD,aAEA,OAAO,SAAUC,GAIf,SAASC,EAAQC,GACf,GAAIA,EAAO,IACTF,EAAWE,EAAQ,KACnB,MAAOC,KAGX,OAAO,SAAmBC,EAASC,EAASC,EAAWC,EAASC,EAAMC,EAAQC,EAAQC,EAAIC,EAAOC,GAC/F,OAAQT,GAEN,KAAK,EAEH,GAAc,IAAVQ,GAAyC,KAA1BP,EAAQS,WAAW,GAAW,OAAOd,EAAWK,EAAU,KAAM,GACnF,MAGF,KAAK,EACH,GAAW,IAAPM,EAAU,OAAON,EAnBX,QAoBV,MAGF,KAAK,EACH,OAAQM,GAEN,KAAK,IACL,KAAK,IACH,OAAOX,EAAWM,EAAU,GAAKD,GAAU,GAE7C,QACE,OAAOA,GAAkB,IAAPQ,EA/BZ,QA+BmC,IAG/C,KAAM,EACJR,EAAQU,MAlCDC,UAkCeC,QAAQhB,MAxC6CiB","file":"static/js/npm.stylis-rule-sheet.e17acc18.chunk.js","sourcesContent":["(function (factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module['exports'] = factory() : typeof define === 'function' && define['amd'] ? define(factory()) : window['stylisRuleSheet'] = factory();\n})(function () {\n  'use strict';\n\n  return function (insertRule) {\n    var delimiter = '/*|*/';\n    var needle = delimiter + '}';\n\n    function toSheet(block) {\n      if (block) try {\n        insertRule(block + '}');\n      } catch (e) {}\n    }\n\n    return function ruleSheet(context, content, selectors, parents, line, column, length, ns, depth, at) {\n      switch (context) {\n        // property\n        case 1:\n          // @import\n          if (depth === 0 && content.charCodeAt(0) === 64) return insertRule(content + ';'), '';\n          break;\n        // selector\n\n        case 2:\n          if (ns === 0) return content + delimiter;\n          break;\n        // at-rule\n\n        case 3:\n          switch (ns) {\n            // @font-face, @page\n            case 102:\n            case 112:\n              return insertRule(selectors[0] + content), '';\n\n            default:\n              return content + (at === 0 ? delimiter : '');\n          }\n\n        case -2:\n          content.split(needle).forEach(toSheet);\n      }\n    };\n  };\n});"],"sourceRoot":""}